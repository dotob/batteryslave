<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[batteryslave]]></title>
  <link href="http://batteryslave.com/atom.xml" rel="self"/>
  <link href="http://batteryslave.com/"/>
  <updated>2013-12-18T21:34:26+01:00</updated>
  <id>http://batteryslave.com/</id>
  <author>
    <name><![CDATA[basti]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[oredev twitter statistics]]></title>
    <link href="http://batteryslave.com/blog/2012/11/08/oredev-twitter-statistics/"/>
    <updated>2012-11-08T23:18:00+01:00</updated>
    <id>http://batteryslave.com/blog/2012/11/08/oredev-twitter-statistics</id>
    <content type="html"><![CDATA[<p>with beeing at oredev one has to use twitter. so i did and it is was fun. got some new followers and found some interesting side infos and also some new guys to follow. but i wondered if there is some statistic data to gather around twitter usage. heres what i did:</p>

<ul>
<li>install t gem</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install t</span></code></pre></td></tr></table></div></figure>


<ul>
<li>authorize, follow the orders of t</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>t authorize</span></code></pre></td></tr></table></div></figure>


<ul>
<li>query twitter and but just use stuff from beginning of conference on monday</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>t search all -n 10000 --csv "#oredev" | grep "2012-11-0[5-9]" | tee all_tweets</span></code></pre></td></tr></table></div></figure>


<ul>
<li>get top 10 tweeter</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>awk -F, '{print $3}' all_tweets | sort | uniq -c | sort -n -r| head -n10</span></code></pre></td></tr></table></div></figure>


<ul>
<li>time distribution of tweets grouped by hour</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>awk -F, '{print $2}' all_tweets | awk -F: '{print $1}' | uniq -c &gt; time_distribution</span></code></pre></td></tr></table></div></figure>


<h2>results</h2>

<h4>how many tweets in 5 days</h4>

<p>2639</p>

<h4>top 10</h4>

<ol>
<li>141 lisacrispin</li>
<li>115 eventmalin</li>
<li> 92 oredev</li>
<li> 79 jakobklamra</li>
<li> 73 rafek</li>
<li> 41 Aptitud_Sthlm</li>
<li> 40 stratiteq</li>
<li> 39 testertested</li>
<li> 38 steenhulthin</li>
<li> 36 siggeb</li>
</ol>


<h4>time distribution graph</h4>

<p><img src="http://batteryslave.com/images/oredev_tweets_timedistribution.png" alt="time distribution" />
unfortunately without meaningful x-axis lables&#8230;any ideas how to get that right are welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[oredev wednesday]]></title>
    <link href="http://batteryslave.com/blog/2012/11/07/oredev-wednesday/"/>
    <updated>2012-11-07T23:25:00+01:00</updated>
    <id>http://batteryslave.com/blog/2012/11/07/oredev-wednesday</id>
    <content type="html"><![CDATA[<p>after the two workshop days now the real conference part starts. and the venue is filling up.</p>

<p>ok what happend today:</p>

<h2>keynote</h2>

<p>first keynote by <strong>david rowan</strong> from wired magazine. on <em>software won - what now?</em> he appeals to the software community to create software with a greater good in mind. he shows examples like <a href="https://docs.google.com/document/pub?id=1SGcfQz13ce4FfB-QHKF3WLwxHoCRGBouuvZn-3aoX0k">hurricane hacker</a> and educational sites. liked the moral touch.</p>

<h2>morning</h2>

<ul>
<li>first talk by <strong>diana larsen</strong> about <em>managing agile teams</em> where she introduces us into <a href="http://martinfowler.com/articles/agileFluency.html">agile fluency</a> a sensible concept for agile team classification. she developed this concept with martin fowler and james shore.</li>
<li>next <strong>lisa crispin</strong> on <em>pair programming</em>. after unfortunate technical problems she shows pros and cons on pairing. i liked the idea to have two monitors, mouse and keyboards for pairing. also i never thought about the idea of pairing with a tester or pairing two tester. but that seems interesting. after this talk i think i need to pair more ;-)</li>
</ul>


<h2>afternoon</h2>

<ul>
<li>the next talk by <strong>brian foote</strong> about <em>software in the age of sampling</em>. sorry didnt like it very much. he had technical problems and i couldnt get the idea. perhaps he wanted to tell that it is ok to copy, paste, transform code from other sources&#8230;donno.</li>
<li><em>the secrets of chrome developer tools</em> by <strong>patrick dubroy</strong>. he&#8217;s a developer at the google dev tools team in munich. liked the talk. biggest new info: in the sources panel you can prettyprint javascript files if they where minified for better debugging. great!</li>
<li>the talk by <strong>shay friedman</strong> <em>what c# could do that</em> had good topic and good performance but no new info for me. he talked about dynamic keyword, expandoobject, the dlr and the iron* languages und the roslyn-(new-c#-compiler-rewritten-in-c#)-project</li>
<li><em>it&#8217;s not you, it&#8217;s them: why programming languages are hard to teach</em> by <strong>zed a. shaw</strong> aka programming-motherfucker. awesome talk. really liked the language bashing ;-) had good ideas i think and invited the scientific community to do more research on how programming languages are learned and thereby can be improved towards better lernability.</li>
</ul>


<h2>evening</h2>

<ul>
<li>keynote by <strong>jim mccarthy</strong> of microsoft visual c++ (and more) fame. i liked the energy he had although sometimes he went into kindof preaching&#8230;perhaps less would be more. besides he promised every team can have a &#8220;shared vision&#8221; and the audience agreed that that is a very good thing, but then he didnt told us how to get there&#8230;damn.</li>
<li>after the keynote there was great food, warm beer (<em>arg</em>), live jazz music and a quiz (where i won the first round which surprised me more than anybody else. now i own a superman-costume.)</li>
</ul>


<p>so i am curious about tomorrow. but i am certain it will be great. see u all</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[oredev memes summary]]></title>
    <link href="http://batteryslave.com/blog/2012/11/07/oredev-memes-summary/"/>
    <updated>2012-11-07T13:06:00+01:00</updated>
    <id>http://batteryslave.com/blog/2012/11/07/oredev-memes-summary</id>
    <content type="html"><![CDATA[<p>here on oredev the conference rooms are named after <a href="http://en.wikipedia.org/wiki/Internet_meme">internet memes</a>. what a great idea.</p>

<p>i compiled a list of links for you to enjoy information on the memes (with mini explanations mainly from <a href="http://en.wikipedia.org/wiki/List_of_Internet_phenomena">wikipedia</a>), ordered by youtube hits:</p>

<ul>
<li><a href="http://www.youtube.com/watch?v=9bZkp7q19f0">gangnam style</a>, 664,8mio hits <strong>wow</strong>, A song and music video by South Korean rapper, Psy, showing him doing an &#8220;invisible horse dance&#8221; across a number of odd locations, leading to its viral spread as well as the single reaching international music charts</li>
<li><a href="http://www.youtube.com/watch?v=QH2-TGUlwu4">nyan cat</a>, 87.5mio hits,  A YouTube video of an animated flying cat, set to a Utau song</li>
<li><a href="http://www.youtube.com/watch?v=4r7wHMg5Yjg">honey bagder</a>, 53.4mio hits, A YouTube video posted in 2011 by Randall featuring a comedic narration dubbed over pre-existing National Geographic footage</li>
<li><a href="http://www.youtube.com/watch?v=OQSNhk5ICTI">double rainbow</a>, 35.7mio hits, Video posted to YouTube by Paul Vasquez of him filming a rainbow with a secondary bow at Yosemite National Park. Vasquez, possibly intoxicated during the filming by the tone of his voice, is heard to say amazing and philosophical questions about the rainbows, such as &#8220;what do they mean?&#8221;. Subsequently, the video went viral, furthered by an auto-tuned song using the video&#8217;s audio track</li>
<li><a href="http://www.youtube.com/watch?v=J---aiyznGQ">keyboard cat</a>, 27.9mio hits, Footage of a cat playing an electric keyboard that is appended to the end of blooper or other video as if to play the participants off stage after a mistake or gaffe</li>
<li><a href="http://www.youtube.com/watch?v=TWfph3iNC-k">grinding the crack</a>, 19.1mio hits, &#8230;</li>
<li><a href="http://www.youtube.com/watch?v=EVwlMVYqMu4">two dining dogs</a>, 14.4mio hits, two dogs sit on a table but they have human hands pretending that they eat a normal meal. the humans providing the hands and &#8220;managing&#8221; the dogs are hidden under the table</li>
<li><a href="http://www.youtube.com/watch?v=FQt-h753jHI">ken lee</a>, 12.9mio hits, Badly garbled song sung by Bulgarian Music Idol hopeful Valentina Hasan. The name &#8220;Ken Lee&#8221; was misunderstood from the English lyric &#8220;Can&#8217;t live,&#8221; as in &#8220;Can&#8217;t live, if living is without you&#8221; from the song &#8220;Without You&#8221; by Badfinger</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[oredev 2012]]></title>
    <link href="http://batteryslave.com/blog/2012/11/06/oredev/"/>
    <updated>2012-11-06T21:52:00+01:00</updated>
    <id>http://batteryslave.com/blog/2012/11/06/oredev</id>
    <content type="html"><![CDATA[<p>since monday i am in malmö, sweden. attending the <a href="http://oredev.org/">oredev conference</a>. its been great here. what happend till now:</p>

<h2>monday:</h2>

<ul>
<li>continous delivery with tom sulston und rachel laycock. great stuff.</li>
<li>in the evening we met at <a href="http://www.ribersborgskallbadhus.se/">kallbadhus</a> a sauna in the sea. after you got heated up you can take a dip in the cold seawater. monday there where 6°C. crazy&#8230;</li>
</ul>


<h2>tuesday:</h2>

<ul>
<li>started with vim masterclass with drew neil. his new book practical vim is out on pragpub. and his workshop was great. i learned a lot about some vim stuff i didnt know. instead of giving a light overview of all the stuff vim can do drew concentrated on some very important basics. e.g. text objects, optimizing your commands for the mighty dot-command and macros</li>
<li>next: vim workshop with tim berglund. he is a githubber and a great speaker. unfortunately for him he had a soar throat but that resulted in a great voice&#8230;sorry tim. so we learnded git basics and some inside stuff as well. luckily he didnt go through hie whole 500 pages slidedeck&#8230;</li>
</ul>


<p>on wednesday the conference part starts. so you can expect over 1000 people. and a lot of great sessions.</p>

<p>hope to see you there</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[moved blog to octopress]]></title>
    <link href="http://batteryslave.com/blog/2012/09/03/moved-blog-to-octopress/"/>
    <updated>2012-09-03T21:14:00+02:00</updated>
    <id>http://batteryslave.com/blog/2012/09/03/moved-blog-to-octopress</id>
    <content type="html"><![CDATA[<p>finally its done: my move to octopress is almost finalized. i previously used <a href="http://www.wordpress.org">wordpress</a>. for the first migrationstep i used a small ruby script inspired by <a href="https://github.com/sbooch/wp-import">this</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rss/2.0&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rss/content&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;schnitzelpress&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;./downmark_it.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Enter the name of your exported Wordpress articles here (in WP, go to Tools - Export)</span>
</span><span class='line'><span class="c1"># must be in the same folder as this script!</span>
</span><span class='line'><span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;wordpress.xml&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">content</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">open</span><span class="p">(</span><span class="n">source</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span> <span class="n">content</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">read</span> <span class="k">end</span>
</span><span class='line'><span class="n">rss</span> <span class="o">=</span> <span class="ss">RSS</span><span class="p">:</span><span class="ss">:Parser</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>
</span><span class='line'><span class="n">slugs</span> <span class="o">=</span> <span class="o">[</span> <span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">link</span><span class="o">[</span><span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">link</span><span class="o">.</span><span class="n">rindex</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">link</span><span class="o">.</span><span class="n">rindex</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">chomp</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">]</span>
</span><span class='line'>  <span class="n">title</span> <span class="o">=</span> <span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">title</span>
</span><span class='line'>  <span class="n">fname</span> <span class="o">=</span> <span class="n">title</span><span class="o">.</span><span class="n">strip</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[\s\.\/\\]/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[^\w-]/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[-_]{2,}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/^[-_]/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[-_]$/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">inhalt</span> <span class="o">=</span> <span class="no">DownmarkIt</span><span class="o">.</span><span class="n">to_markdown</span><span class="p">(</span><span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">content_encoded</span><span class="p">)</span>
</span><span class='line'>  <span class="n">date</span> <span class="o">=</span> <span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">pubDate</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d %H:%M&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">shortdate</span> <span class="o">=</span> <span class="n">rss</span><span class="o">.</span><span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">pubDate</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">doc</span> <span class="o">=</span> <span class="s2">&quot;---</span><span class="se">\n</span><span class="s2">layout: post</span><span class="se">\n</span><span class="s2">title: </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">title</span><span class="si">}</span><span class="se">\&quot;\n</span><span class="s2">date: </span><span class="si">#{</span><span class="n">date</span><span class="si">}</span><span class="se">\n</span><span class="s2">comments: true</span><span class="se">\n</span><span class="s2">---</span><span class="se">\n</span><span class="si">#{</span><span class="n">inhalt</span><span class="si">}</span><span class="s2"> &quot;</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">shortdate</span><span class="si">}</span><span class="s2">-post-</span><span class="si">#{</span><span class="n">fname</span><span class="si">}</span><span class="s2">.markdown&quot;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">doc</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>some posts are not totally beautifully markdowned but i am working on that.</p>

<p>so have fun</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[start ssh-agent]]></title>
    <link href="http://batteryslave.com/blog/2011/08/25/post-start-ssh-agent/"/>
    <updated>2011-08-25T17:46:00+02:00</updated>
    <id>http://batteryslave.com/blog/2011/08/25/post-start-ssh-agent</id>
    <content type="html"><![CDATA[<p>because i always forget how to start ssh-agent, here it is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eval $(ssh-agent)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python interop: using jython and ironruby]]></title>
    <link href="http://batteryslave.com/blog/2010/11/30/post-python-interop-using-jython-and-ironruby/"/>
    <updated>2010-11-30T21:13:00+01:00</updated>
    <id>http://batteryslave.com/blog/2010/11/30/post-python-interop-using-jython-and-ironruby</id>
    <content type="html"><![CDATA[<p>in a project with java and .net komponents we needed to share some validation-code. this code should be executable on both platforms and act against pocos (plain old clr objects) and pojos (plain old java objects).
we tested python as a language that can be executed on both sides using jython for java and ironpython for c#. i want to show you how simple an integration of python is here.
for c# and ironpython:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">IronPython.Hosting</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Microsoft.Scripting</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Microsoft.Scripting.Hosting</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nn">IronPythonValidationTest</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">internal</span> <span class="k">class</span> <span class="nc">Program</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="kt">string</span> <span class="n">code</span> <span class="p">=</span> <span class="s">@&quot;if this.Von &gt; this.Bis:    </span>
</span><span class='line'><span class="s">                          result = &#39;von soll kleiner sein als bis&#39;elif this.Child.Name != &#39;&#39;:    </span>
</span><span class='line'><span class="s">                          result = &#39;name soll gefüllt sein&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="n">ScriptEngine</span> <span class="n">engine</span> <span class="p">=</span> <span class="n">Python</span><span class="p">.</span><span class="n">CreateEngine</span> <span class="p">();</span>
</span><span class='line'>          <span class="n">ScriptScope</span> <span class="n">scope</span> <span class="p">=</span> <span class="n">engine</span><span class="p">.</span><span class="n">CreateScope</span> <span class="p">();</span>
</span><span class='line'>          <span class="n">scope</span><span class="p">.</span><span class="n">SetVariable</span> <span class="p">(</span><span class="s">&quot;this&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="n">TestType</span> <span class="p">{</span><span class="n">Von</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">AddDays</span><span class="p">(</span><span class="m">1</span><span class="p">),</span> <span class="n">Bis</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">,</span> <span class="n">Child</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TestTypeNested</span><span class="p">()});</span>
</span><span class='line'>          <span class="n">ScriptSource</span> <span class="n">source</span> <span class="p">=</span> <span class="n">engine</span><span class="p">.</span><span class="n">CreateScriptSourceFromString</span> <span class="p">(</span><span class="n">code</span><span class="p">,</span> <span class="n">SourceCodeKind</span><span class="p">.</span><span class="n">SingleStatement</span><span class="p">);</span>
</span><span class='line'>          <span class="n">source</span><span class="p">.</span><span class="n">Execute</span> <span class="p">(</span><span class="n">scope</span><span class="p">);</span>
</span><span class='line'>          <span class="kt">string</span> <span class="n">validationResult</span> <span class="p">=</span> <span class="n">scope</span><span class="p">.</span><span class="n">GetVariable</span> <span class="p">(</span><span class="s">&quot;result&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span> <span class="p">(</span><span class="n">validationResult</span><span class="p">);</span>
</span><span class='line'>          <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span> <span class="p">();</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">class</span> <span class="nc">TestType</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">public</span> <span class="n">DateTime</span> <span class="n">Von</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">public</span> <span class="n">DateTime</span> <span class="n">Bis</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">public</span> <span class="n">TestTypeNested</span> <span class="n">Child</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">class</span> <span class="nc">TestTypeNested</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">public</span> <span class="kt">string</span> <span class="n">NochName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and almost the same for java:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">org.python.util.PythonInterpreter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.python.core.*</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JythonValidationTest</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">PythonInterpreter</span> <span class="n">python</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PythonInterpreter</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">code</span> <span class="o">=</span> <span class="s">&quot;if this.Von &gt; this.Bis:\n    result = \&quot;von soll kleiner sein als bis\&quot;\nelif this.Child.Name != \&quot;\&quot;:\n    result = \&quot;name soll gefüllt sein\&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">PyCode</span> <span class="n">pc</span> <span class="o">=</span> <span class="n">python</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">code</span><span class="o">);</span>
</span><span class='line'>      <span class="n">TestType</span> <span class="n">l</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TestType</span><span class="o">();</span>
</span><span class='line'>      <span class="n">l</span><span class="o">.</span><span class="na">setVon</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>      <span class="n">l</span><span class="o">.</span><span class="na">setBis</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="n">python</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">&quot;this&quot;</span><span class="o">,</span> <span class="n">l</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// this has to be a public class, so one could not put it in one classfile</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestType</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="n">von</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="n">bis</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getVon</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">von</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setVon</span><span class="o">(</span><span class="kt">int</span> <span class="n">von</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">von</span> <span class="o">=</span> <span class="n">von</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getBis</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">bis</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBis</span><span class="o">(</span><span class="kt">int</span> <span class="n">bis</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">bis</span> <span class="o">=</span> <span class="n">bis</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>remaining problems:</p>

<ul>
<li>because of naming-convention differences you have to wrap python code so that you can intersept calls to get*() methods. as in c# getters and setters look like Name instead of getName()</li>
<li>if there are user visible strings involved, you have to think about translating them</li>
<li>checking the python code before deployment</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java-bits #1: filedragdrop handler]]></title>
    <link href="http://batteryslave.com/blog/2010/11/02/post-java-bits-1-filedragdrop-handler/"/>
    <updated>2010-11-02T19:06:00+01:00</updated>
    <id>http://batteryslave.com/blog/2010/11/02/post-java-bits-1-filedragdrop-handler</id>
    <content type="html"><![CDATA[<p>drop a file from the explorer to a textbox and make the path the text of that textbox:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// imports omitted, dont know why...</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="kd">extends</span> <span class="n">TransferHandler</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">//.../*DRAG &amp;amp;amp; DROP*/</span>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">importData</span><span class="o">(</span><span class="n">JComponent</span> <span class="n">comp</span><span class="o">,</span> <span class="n">Transferable</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// Make sure we have the right starting points</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!(</span><span class="n">comp</span> <span class="k">instanceof</span> <span class="n">JTextField</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">t</span><span class="o">.</span><span class="na">isDataFlavorSupported</span><span class="o">(</span><span class="n">DataFlavor</span><span class="o">.</span><span class="na">javaFileListFlavor</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="c1">// Grab the tree, its model and the root node</span>
</span><span class='line'>          <span class="n">JTextField</span> <span class="n">textField</span> <span class="o">=</span> <span class="o">(</span><span class="n">JTextField</span><span class="o">)</span> <span class="n">comp</span><span class="o">;</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">List</span> <span class="n">data</span> <span class="o">=</span> <span class="o">(</span><span class="n">List</span><span class="o">)</span> <span class="n">t</span><span class="o">.</span><span class="na">getTransferData</span><span class="o">(</span><span class="n">DataFlavor</span><span class="o">.</span><span class="na">javaFileListFlavor</span><span class="o">);</span>
</span><span class='line'>              <span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">object</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">File</span> <span class="n">f</span> <span class="o">=</span> <span class="o">(</span><span class="n">File</span><span class="o">)</span> <span class="n">object</span><span class="o">;</span>
</span><span class='line'>                  <span class="n">textField</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">f</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedFlavorException</span> <span class="n">ufe</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Ack! we should not be here.\nBad Flavor.&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ioe</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Something failed during import:\n&quot;</span> <span class="o">+</span> <span class="n">ioe</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">canImport</span><span class="o">(</span><span class="n">JComponent</span> <span class="n">comp</span><span class="o">,</span> <span class="n">DataFlavor</span><span class="o">[]</span> <span class="n">transferFlavors</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">comp</span> <span class="k">instanceof</span> <span class="n">JTextField</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">for</span> <span class="o">(</span><span class="n">DataFlavor</span> <span class="n">transferFlavor</span> <span class="o">:</span> <span class="n">transferFlavors</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="o">(</span><span class="n">transferFlavor</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">DataFlavor</span><span class="o">.</span><span class="na">javaFileListFlavor</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                      <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span><span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[on my way to become a keyboard jedi, part II]]></title>
    <link href="http://batteryslave.com/blog/2010/04/20/post-on-my-way-to-become-a-keyboard-jedi-part-ii/"/>
    <updated>2010-04-20T23:05:00+02:00</updated>
    <id>http://batteryslave.com/blog/2010/04/20/post-on-my-way-to-become-a-keyboard-jedi-part-ii</id>
    <content type="html"><![CDATA[<p>last time i told you about launchy as a program starter. this time i want to talk about window handling.to switch between windows most people know that you can flip through your open applications with alt+tab. but in vista and 7 you can after you entered alt+tab once move through the applications with the cursor. e.g. when you have many open applications they are arranged in a row-column-layout when pressing alt+tab. the first item is highlighted. then instead of going though all the items one-by-one you can go down and right for example.see this video:</p>

<object id="scPlayer" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="400" height="214" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="quality" value="high" /><param name="bgcolor" value="#FFFFFF" /><param name="flashVars" value="thumb=http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/FirstFrame.jpg&amp;containerwidth=370&amp;containerheight=198&amp;content=http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/alt_tab_with_cursor.mp4&amp;blurover=false" /><param name="allowFullScreen" value="true" /><param name="scale" value="showall" /><param name="allowScriptAccess" value="always" /><param name="base" value="http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/" /><param name="src" value="http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/jingh264player.swf" /><param name="flashvars" value="thumb=http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/FirstFrame.jpg&amp;containerwidth=370&amp;containerheight=198&amp;content=http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/alt_tab_with_cursor.mp4&amp;blurover=false" /><param name="allowfullscreen" value="true" /><embed id="scPlayer" type="application/x-shockwave-flash" width="370" height="198" src="http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/jingh264player.swf" base="http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/" allowscriptaccess="always" scale="showall" allowfullscreen="true" flashvars="thumb=http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/FirstFrame.jpg&amp;containerwidth=370&amp;containerheight=198&amp;content=http://content.screencast.com/users/dotob/folders/Jing/media/ecdb4d30-fbed-445c-81a2-cda0da5c63d7/alt_tab_with_cursor.mp4&amp;blurover=false" bgcolor="#FFFFFF" quality="high"></embed></object>


<p>next thing: window management with <a href="http://www.winsplit-revolution.com/">winsplit revolution</a>:see this video:</p>

<object id="scPlayer" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="400" height="290" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="quality" value="high" /><param name="bgcolor" value="#FFFFFF" /><param name="flashVars" value="thumb=http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/FirstFrame.jpg&amp;containerwidth=400&amp;containerheight=290&amp;content=http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/winsplit_revolution.mp4&amp;blurover=false" /><param name="allowFullScreen" value="true" /><param name="scale" value="showall" /><param name="allowScriptAccess" value="always" /><param name="base" value="http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/" /><param name="src" value="http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/jingh264player.swf" /><param name="flashvars" value="thumb=http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/FirstFrame.jpg&amp;containerwidth=400&amp;containerheight=290&amp;content=http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/winsplit_revolution.mp4&amp;blurover=false" /><param name="allowfullscreen" value="true" /><embed id="scPlayer" type="application/x-shockwave-flash" width="400" height="290" src="http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/jingh264player.swf" base="http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/" allowscriptaccess="always" scale="showall" allowfullscreen="true" flashvars="thumb=http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/FirstFrame.jpg&amp;containerwidth=400&amp;containerheight=290&amp;content=http://content.screencast.com/users/dotob/folders/Jing/media/e8c82c10-bf77-48af-b911-8132c81b4601/winsplit_revolution.mp4&amp;blurover=false" bgcolor="#FFFFFF" quality="high"></embed></object>


<p>here are the keycombinations:</p>

<ul>
<li>Ctrl+Alt+1 = Bottom left corner of the screen</li>
<li>Ctrl+Alt+2 = Bottom part</li>
<li>Ctrl+Alt+3 = Bottom right corner</li>
<li>Ctrl+Alt+4 = Left part</li>
<li>Ctrl+Alt+5 = Full screen</li>
<li>Ctrl+Alt+6 = Right part</li>
<li>Ctrl+Alt+7 = Upper left corner</li>
<li>Ctrl+Alt+8 = Upper part</li>
<li>Ctrl+Alt+9 = Upper right corner</li>
</ul>


<p>it is a great tool - really.</p>

<p>to be continued&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[on my way to become a keyboard jedi, part I]]></title>
    <link href="http://batteryslave.com/blog/2010/03/21/post-on-my-way-to-become-a-keyboard-jedi-part-i/"/>
    <updated>2010-03-21T19:08:00+01:00</updated>
    <id>http://batteryslave.com/blog/2010/03/21/post-on-my-way-to-become-a-keyboard-jedi-part-i</id>
    <content type="html"><![CDATA[<p>on my daily work i try to become better in not using the mouse for almost anything. starting programs, file system tasks, navigating the internet, programming, handling windows (as in dialogs not as in os) and more&#8230;i want to show some of that stuff:</p>

<ul>
<li>launchy</li>
<li>alt-tab</li>
<li>winsplit revolution</li>
<li>ultramon</li>
<li>totalcommander</li>
<li>resharper</li>
<li>psi</li>
<li>menu-mnemonics</li>
<li>autohotkey</li>
</ul>


<p>but more on that step by step.</p>

<p><a href="http://www.launchy.net/">launchy</a>, free, (Win, MacOS, Linux)launchy is a program launcher. you can start it with a keycombination (default is alt+space) then an entryfield shows up and you can type any part of a programs name you have installed and launchy will show a list of matches. usually a simple enter will start the found program. thats great for starters.<img src="images/launchy.png" title="launchy" alt="launchy app starter" />
but there is more: launchy supports plugins. two of them i wanna show:
<a href="http://code.google.com/p/putty-launchy-plugin/">putty-launchy-plugin</a>: tell it where your putty lives and it can start saved putty sessions via defined (default &#8220;ssh&#8221;) shortcut. have a session called &#8220;webserver&#8221; start it with alt+space, &#8220;ssh we&#8221;. if you have putty and your ssh configured for public-key-authentication (and you should have) you are now ready to use your shell.runner (default installed): you can launch special programs from here with parameters you like and give it a special shortcut. e.g. i have special two-letter shortcuts for important specification documents or <a href="http://technet.microsoft.com/de-de/sysinternals/bb896653.aspx">processexplorer</a>.</p>

<p>to be continued&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ant replace task: remind the encoding]]></title>
    <link href="http://batteryslave.com/blog/2010/02/20/post-ant-replace-task-remind-the-encoding/"/>
    <updated>2010-02-20T19:39:00+01:00</updated>
    <id>http://batteryslave.com/blog/2010/02/20/post-ant-replace-task-remind-the-encoding</id>
    <content type="html"><![CDATA[<p>puh man again nearly going crazy over a simple problem.</p>

<p>the environment:</p>

<ul>
<li>java project</li>
<li>edited in eclipse (an a mac)</li>
<li>check into subversion (on a linux box)</li>
<li>teamcity buildserver using ant build script (same linux box as subversion)</li>
</ul>


<p>what happened: everywhere the encoding was correct beside one file. in that file my umlauts where messed. in my eclipse build (warning: not using the ant there) everything was fine. but when is looked at the file in teamcitys build directory it was messed. at first i thought of subversion. checked everything  out by hand on the linux box => fine. then i tried to find out how teamcity uses svn. they have their own implementation. so i figured they do something wrong. so i updated teamcity from 4.5 to 5.0.2&#8230;
same result. so i waited about a week. then with a fresh mind i looked at the ant script when it hit me: i had a replace task to set the buildnumber in the messed sourcecode file (perhaps an unusual attemped but&#8230;). and replace uses the default encoding of the executing jvm. i neede to set the encoding for the javac task but i forgot or better didnt consider it a problem for the replace.with the encoding set everything was fine. see how:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;replace</span>
</span><span class='line'>  <span class="na">file=</span><span class="s">&quot;MainWindow.java&quot;</span>
</span><span class='line'>  <span class="na">token=</span><span class="s">&quot;buildnumber&quot;</span>
</span><span class='line'>  <span class="na">value=</span><span class="s">&quot;${myBuildNumber}&quot;</span>
</span><span class='line'>  <span class="na">encoding=</span><span class="s">&quot;ISO-8859-1&quot;</span>
</span><span class='line'><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[walk in the park: installing mod_rails aka phusion passenger]]></title>
    <link href="http://batteryslave.com/blog/2009/10/13/post-walk-in-the-park-installing-mod_rails-aka-phusion-passenger/"/>
    <updated>2009-10-13T17:43:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/10/13/post-walk-in-the-park-installing-mod_rails-aka-phusion-passenger</id>
    <content type="html"><![CDATA[<p>man that was easy. after my <a href="http://www.batteryslave.com/2009/10/getting-ruby-on-rails-to-run-on-my-debian-4-vps/">problems</a> with getting ruby, gem and rails to run installing mod_rails aka phusion passenger was really easy:- gem install passenger
- passenger-install-apache2-module
i followed the steps that the installer told me and go. just needed to apt-get some apache dev packages and was ready to run. cant tell you how happy i am.now the rails fun can start.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[getting ruby on rails to run on my debian 4 vps]]></title>
    <link href="http://batteryslave.com/blog/2009/10/13/post-getting-ruby-on-rails-to-run-on-my-debian-4-vps/"/>
    <updated>2009-10-13T14:29:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/10/13/post-getting-ruby-on-rails-to-run-on-my-debian-4-vps</id>
    <content type="html"><![CDATA[<p>man&#8230;always fighting to get a recent version of anything to run on the debian 4 (etch) vps i have. this time: ruby on rails. ruby v1.9.1, gems 1.3.5 and ror 2.3.4 is what i had i mind.</p>

<p>first step: download ruby. execute the usual ./configure &amp;&amp; make &amp;&amp; make install triplet. worked fine. then download ruby gems. but when i tried to run anything with gem i got:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require': no such file to load -- zlib (LoadError)
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/spec_fetcher.rb:1
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/commands/update_command.rb:5
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/command_manager.rb:167:in `load_and_instantiate'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/command_manager.rb:88:in `[]'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/command_manager.rb:144:in `find_command'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/command_manager.rb:131:in `process_args'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/command_manager.rb:102:in `run'
</span><span class='line'>  from /usr/local/lib/ruby/site_ruby/1.8/rubygems/gem_runner.rb:58:in `run'
</span><span class='line'>  from /usr/local/bin/gem:21</span></code></pre></td></tr></table></div></figure>


<p>after googleing and trying some stuff i solved it this way:
- edit ruby-1.9.1-p0/ext/Setup
- uncomment the line zlib
- make &amp;&amp; make install again</p>

<p>next step. successfully let gem install rails. but then <code>ruby script/server</code> stopped with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=&gt; Booting WEBrick=&gt; Rails 2.3.4 application starting on http://0.0.0.0:3000/usr/local/lib/ruby/gems/1.9.1/gems/rails-2.3.4/lib/initializer.rb:271:in `rescue in require_frameworks': no such file to load -- openssl (RuntimeError)
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/rails-2.3.4/lib/initializer.rb:268:in `require_frameworks'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/rails-2.3.4/lib/initializer.rb:134:in `process'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/rails-2.3.4/lib/initializer.rb:113:in `run'
</span><span class='line'>  from /var/www/rails/ukk/config/environment.rb:9:in `&lt;top (required)&gt;'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:156:in `require'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:156:in `block in require'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:521:in `new_constants_in'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:156:in `require'
</span><span class='line'>  from /usr/local/lib/ruby/gems/1.9.1/gems/rails-2.3.4/lib/commands/server.rb:84:in `&lt;top (required)&gt;'
</span><span class='line'>  from script/server:3:in `require'
</span><span class='line'>  from script/server:3:in </span></code></pre></td></tr></table></div></figure>


<p>after a another round i found <a href="http://linuxnuggetz.blogspot.com/2009/06/ruby-on-rail-on-ubuntu.html">this site</a> with help:
- apt-get install openssl libssl-dev
- apt-get install ruby1.9-dev
- cd ruby-1.9.1-p129/ext/openssl
- ruby extconf.rb
- make &amp;&amp; make install</p>

<p>that worked. nice. so now i am waiting for the next fail</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[itemtemplate selection by type in xaml only]]></title>
    <link href="http://batteryslave.com/blog/2009/09/23/post-itemtemplate-selection-by-type-in-xaml-only/"/>
    <updated>2009-09-23T19:29:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/09/23/post-itemtemplate-selection-by-type-in-xaml-only</id>
    <content type="html"><![CDATA[<p>some days ago i found my self in need to change the itemtemplate in a listbox according to their type. and if with less code as possible. i had done this in a treeview but i couldnt find the code again. so i needed to figure it out again and with some help from a collegue we ended with this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- more xaml here --&gt;</span>
</span><span class='line'><span class="nt">&lt;itemscontrol</span> <span class="na">itemssource=</span><span class="s">&quot;{Binding Items}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;itemscontrol.resources&gt;</span>
</span><span class='line'>      <span class="nt">&lt;datatemplate</span> <span class="na">datatype=</span><span class="s">&quot;{x:Type MyNameSpace:MyType1}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;radiobutton</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/datatemplate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;datatemplate</span> <span class="na">datatype=</span><span class="s">&quot;{x:Type MyNameSpace:MyType2}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;combobox</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/datatemplate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;datatemplate</span> <span class="na">datatype=</span><span class="s">&quot;{x:Type MyNameSpace:MyType3}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;textbox</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/datatemplate&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/itemscontrol.resources&gt;</span>
</span><span class='line'><span class="nt">&lt;/itemscontrol&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- more xaml here --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>remark</strong>: you arent allowed to give a key to that resources. i suppose the type is kind of key here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[prio conf 28.-29.10. in munich]]></title>
    <link href="http://batteryslave.com/blog/2009/09/23/post-prio-conf-28-29-10-in-munich/"/>
    <updated>2009-09-23T19:28:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/09/23/post-prio-conf-28-29-10-in-munich</id>
    <content type="html"><![CDATA[<p>i am existed about a conference i am attending end of oktober in munich, germany: <a href="http://www.prio-conference.de">prio conference</a>. its totally ui centric and that why its so hot. never saw such an interesting conference all about ui in germany before.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[some thougths about google wave]]></title>
    <link href="http://batteryslave.com/blog/2009/06/03/post-some-thougths-about-google-wave/"/>
    <updated>2009-06-03T07:42:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/06/03/post-some-thougths-about-google-wave</id>
    <content type="html"><![CDATA[<p>in the last days theres a lot of fuzz about google wave. if you are interested in new technology you have to see the <a href="http://wave.google.com/">video</a>. its a great presentation of a very early product state.</p>

<p>try to explain what wave will be: its email, im, chat, collaboration in one sleek interface. and its all in the browser with heavy usage of bleeding edge technology like the not yet finished html 5. in wave the basic thing is a &#8220;wave&#8221;. consider it like a im/email-conversation on steroids. if you now google mail you should be familiar with its great conversation view. that is showing emails with similar subject grouped together. although the ones you send (i thnk this is the most compelling feature of gmail and i havent found this done right in any other mail client). in wave this is an important feature too. everything is grouped in conversations - sorry &#8220;waves&#8221;. but whats the difference? the difference is, that every member of the wave can edit the wave on every point in time. meaning you can go back to the initial post and add your message there or append it to the end. all changes can be replayed using a cool history playback.</p>

<p>for a nerd like me it looked all very cool. but i think it is very complex. perhaps too complex for big audience. i think google is aiming for everybody&#8230;</p>

<p>but the usual user will be overwhelmed by the possibilities. to grasp the hole flow of a conversation over time could be very hard despite the playback. so for now i cant see email going away soon. a very interesating point they didnt mention in the presentation is the spam-problem. also since i am using gmail for a long time now my spam-problems are nearly vanished i think that is one of the most annoying things in email. could they find a way to eliminate that with wave?but one of the best things with wave is the open source approach. they will open all stuff they already have. the protocol will be open and there will be a sophisticated plugin architecture to add many features (as they showed twitter, bug tracking, chess, sudoku). and what i understand one can host a wave server by himself so the most privacy issues for business could be solved with this as wave wont send any stuff to google that is intranet.</p>

<p>so i am very excited to see how it will be. but it seems we need to wait for the end of the year to see it live.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[what is wrong with focus in wpf]]></title>
    <link href="http://batteryslave.com/blog/2009/05/14/post-what-is-wrong-with-focus-in-wpf/"/>
    <updated>2009-05-14T20:13:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/05/14/post-what-is-wrong-with-focus-in-wpf</id>
    <content type="html"><![CDATA[<p>lately we wanted to set the initial focus on a window in wpf to improve the  keyboard experience in our app. what we want to achieve is just the initial  focus. so when one opens the window he can type or push the most meaningful  button instantly. unfortunately we encountered several problems. at first lets  see what wpf offers to set the focus. there are at least 4 possibilities:</p>

<ul>
<li>FocusManager</li>
<li>Keyboard.Focus</li>
<li>InputElement.Focus</li>
<li>InputElement.MoveFocus</li>
</ul>


<p>what i understand from <a href="http://msdn.microsoft.com/en-us/library/aa969768.aspx">msdn</a> is that  the best way to set the initial focus is the focusmanager. but we encountered two problems where that wont work:
- set initial focus to a button with a commandbinding
- set initial focus to an element defined through a contenttemplate</p>

<p>i did not understand why that is. but i found two strange things: when  setting a breakpoint in the ContentRendered-Event you can see the button is  visible, but it is disabled. so i understand that i doesnt make sense to set the focus to a disabled element. this seems like a bug to me.</p>

<p>another thing i could not understand is when the content of the control is set through a ContentTemplate the Method FrameworkElement.FindName(string elementName) wouldnt  find the element. isnt that a bug too? when you inspect the window on screen  with scoop u can see all the elements of course.</p>

<p>i tried to use the other focus-methods in various events but none worked. funny thing: if you set the  focus and have a breakpoint in the Loaded-Event and just go on after stopping there the focus is correct. Racecondition?</p>

<p>so is there someone who had similar problems? am i wrong with my feeling that these are bugs?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[skillsmatter, london: day 3]]></title>
    <link href="http://batteryslave.com/blog/2009/05/14/post-skillsmatter-london-day-3/"/>
    <updated>2009-05-14T19:52:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/05/14/post-skillsmatter-london-day-3</id>
    <content type="html"><![CDATA[<p>man, again a hour too early. but needed to pack my stuff so i arrived at the old sessions house on time. first session with david laribee: &#8220;towards a new architect&#8221;.man is dave a good speaker. nice minimalistic slides. and we got teamwork. i think a great exercise was the condensation of team values. we startet in small groups (5 people) - diversion phase. where we found around 25 values. all the stuff that came to our minds. then we voted on the values and found 5 top values (conversion phase, we could have summed al the teams values up but to see how it works it was enough) for which we had to find sentences to declare why we honour that value. dave suggested to print those team values so the team have them in mind always. great idea.after the usual lunchbox i decided to attend the second workshop from dave. unfortunately it started a bit messy. not everybody understood what to do because the exercises where really abstract. and because i had to depart about an hour too early i couldnt see the end result.as i mentioned my flight was early so i had to leave skillsmatter at 17 o&#8217;clock. too bad because they instantiated a discussion with all the speakers at 18 o&#8217;clock and a beer at the crown pub nearby after that. i should have planned my home ride on thursday. hmmm&#8230;next time.baseline:i think the progressive .net workshops from skillsmatter where great. i had very good conversations (mostly limited by my speaking skills). the speakers where always near. not that they leaved after their talk but one could always get to them and ask questions. the atmosphere was very familiar. i liked the location and the organisation was very good. two things i didnt like: the internet-connection was very bad. that was really really annoying. many attendees had 3g-connections but i think if i had used mine (german provider!!) i think by boss had killed me. the second thing: the lunch boxes where a little small for my taste. but i can recommend the workshops without a doubt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[skillsmatter, london: day 2]]></title>
    <link href="http://batteryslave.com/blog/2009/05/14/post-skillsmatter-london-day-2/"/>
    <updated>2009-05-14T19:22:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/05/14/post-skillsmatter-london-day-2</id>
    <content type="html"><![CDATA[<p>i am still not adapted to the hour time difference between germany and the uk. so i awoke a hour to early.arrived early at the old session house where the workshops take place and decided to hear the f#-workshop with robert pickering. the workshop was full of f# content. robert is real expert. the speed we rushed through the slides was amazing. but at the and we arrived at some beautiful examples of the power of f# which robert ported from python out of the book &#8220;collective intelligence&#8221; by <span class="ptBrand">toby segaran - great read by the way. he drawed some nice dendrogramms e.g. of a blogclustering algorithm. </span><span class="ptBrand">after the light lunchbag (nearly the same like yesterday) james, david and i got a small beer before we joined the advanced nhibernate workshop with ayende.</span><span class="ptBrand">wow the room was full. big speaker, big room, big audience - great. so ayende told he has no slides and nothing prepared at all. he questioned the audience to supply topics he would then talk about. he collected about 25 topics&#8230;for a 4h workshop&#8230;not bad. and it was fun. for example the suggested topic &#8220;stored procedures&#8221; he wrote down as &#8220;stored procedures, and how they bite you in the ass&#8221;. ayende is really cool. the rest of the talk was also very passionate.</span>after that gojko guided the group to the alt.net beers. snacks and drinks where sponsored by thoughtworks and skillsmatter (thanks for that). i learned serialseb is the dictator of the alt.net beers. he managed the geeky crowd to really get to two talks around document databases and bdd. some of the speakers had an alcohol clouded mind to say the least. but it was real fun. it was an amazing day 2.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[skillsmatter, london: day 1]]></title>
    <link href="http://batteryslave.com/blog/2009/05/12/post-skillsmatter-london-day-1/"/>
    <updated>2009-05-12T00:06:00+02:00</updated>
    <id>http://batteryslave.com/blog/2009/05/12/post-skillsmatter-london-day-1</id>
    <content type="html"><![CDATA[<p>so the first day is finished. when i arrived at skillsmatter i met michel. like expected. first talk with ian cooper about internal dsls in c#. cool intro to the matter. now i need to have a look at some stuff:- push-button- vs. fluent-api
- <a href="http://code.google.com/p/nbuilder/">nbuilder</a>
- closures are code handled like data
- <a href="http://ayende.com/Blog/2005/10/29/StaticReflection.aspx">static reflection</a>
- <a href="http://ayende.com/default.aspx">rhino dsl</a>
- <a href="http://code.google.com/p/mite-net/">mite</a>
after that we got a lunchbag and sat in the sun for an hour. then sebastien lambla joined. i didnt know much about him but he seemed funny and interesting so i decided to see his talk instead of the fitnesse one. and it was great. he stated that he had only 3h of sleep because he had to get openrasta to work for the workshop. but he got it and the workshop went great.when the workshop ended we all went to have a beer. there where some discussions with lambla aka serialseb, oren aka ayende and some other nice guys.we ended the evening with pizza at pizza express with 14 funny people where we had also some great discussions about latin as a language in school and introducing agile techniques to teams in very big and long lasting projects. very interesting.know i am done, have a good night</p>
]]></content>
  </entry>
  
</feed>
